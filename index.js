// npm init -y
// npm i inquirer@8.2.4

// where questions will be asked based on user input and the objects chosen
// step 1: import objects created in their respective files
const Employee = require('./lib/Employee');
const Manager = require('./lib/Manager');
const Engineer = require('./lib/Engineer');
const Intern = require('./lib/Intern');

// import npm inquirer package and gain access to file system (fs)
const inquirer = require('inquirer');
const fs = require('fs');

// array where all employees will go 
// const myTeamArray = [];

// variable used to create each seperate employee
// const newEmployee = new Employee(employee_name, employee_role, employee_id, employee_email);

const generateTeam = ({ employee_name, employee_role, employee_id, employee_email }) => `
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="./styles.css">
    <title>MyTeam App - Generate A Webpage For Your Software Team</title>
</head>

<body>

    <header class="text-center mb-5">
        <h1>My Software Team</h1>
        <p>Generated by the MyTeam App</p>
    </header>

    <main class="main-container d-flex justify-content-center align-items-center flex-column">

        <section class="team-card text-center manager-box mb-5">
            <div class="card-info mt-3">
                <h2>${employee_name}</h2>
                <p>${employee_role}</p>
                <p>${employee_id}</p>
                <p>${employee_email}</p>
                <p>Office, School, GitHub</p>
            </div>
        </section>

        <section class="team-card text-center employee-box">
            <div class="card-info mt-3">
                <h2>Name</h2>
                <p>Role</p>
                <p>ID</p>
                <p>Email</p>
                <p>Office, School, GitHub</p>
            </div>
        </section>

    </main>

</body>

</html>
`

// newEmployee.setTeam();
function setTeam() {
    inquirer
        .prompt([
            {
                type: 'input',
                name: 'employee_name',
                message: "Please enter your employee's name:",
                // validate: names => /[a-z]/gi.test(names),
            },
            {
                type: 'input',
                name: 'employee_id',
                message: "Please enter your employee's ID number:",
                validate: ids => /[1-9]/gi.test(ids),
            },
            {
                type: 'input',
                name: 'employee_email',
                message: "Please enter your employee's email:",
            },
            {
                type: 'list',
                name: 'employee_role',
                message: "Please enter your employee's role:",
                choices: ['Manager', 'Engineer', 'Intern']
            },
        ])
        .then((answers) => {
            switch (answers.employee_role) {
                case 'Manager':
                    inquirer
                        .prompt([
                            {
                                type: 'input',
                                name: 'office_number',
                                message: 'Please enter your office number:',
                                validate: numbers => /[1-9]/gi.test(numbers),
                            }
                        ])
                        .then(addAnotherEmployee());
                    break;
                case 'Engineer':
                    inquirer
                        .prompt([
                            {
                                type: 'input',
                                name: 'github',
                                message: 'Please enter your GitHub username:',
                            }
                        ])
                        .then(addAnotherEmployee());
                    break;
                case 'Intern':
                    inquirer
                        .prompt([
                            {
                                type: 'input',
                                name: 'school',
                                message: 'Please enter the name of your school:',
                            }
                        ])
                        .then(addAnotherEmployee());
                    break;
                default: 'Employee';
            };
        })
    function addAnotherEmployee() {
        inquirer
            .prompt[(
                {
                    type: 'confirm',
                    name: 'add_employee',
                    message: 'Would you like to add another employee?',
                    default: false,
                }
            )]
            .then((answers) => {
                answers.add_employee ? setTeam() : false;
            })
            .then((answers) => {
                const myTeamApp = generateTeam(answers);
                console.log(answers);

                // let the user know if it worked
                fs.writeFile('./dist/index.html', myTeamApp, (err) =>
                    err ? console.log(err) : console.log("Success! To see your team, right click on your index.html file and select 'Open In Default Browser'!")
                );
            });
    }
};

setTeam();


// .catch(function(err) {
//     console.log(err);
//   });